// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/lib": {
            "get": {
                "description": "Возвращает список песен с пагинацией",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Songs per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/song": {
            "get": {
                "description": "Возвращает текст песни по куплетам",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Song title",
                        "name": "song",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group",
                        "name": "group",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Couplets per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "description": "Изменить существующую песню",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Song title",
                        "name": "song",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group",
                        "name": "group",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "you can change releaseDate, text or link",
                        "name": "changes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "description": "Добавление песни",
                "parameters": [
                    {
                        "description": "Need group and song",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Удалить существующую песню",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Song title",
                        "name": "song",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group",
                        "name": "group",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8082",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Music Library API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
